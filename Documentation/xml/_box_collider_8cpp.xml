<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="_box_collider_8cpp" kind="file" language="C++">
    <compoundname>BoxCollider.cpp</compoundname>
    <includes refid="_box_collider_8h" local="yes">ECS/Component/Components/BoxCollider.h</includes>
    <includes refid="_game_object_8h" local="yes">ECS/Entity/GameObject.h</includes>
    <includes refid="_logger_8h" local="yes">Utils/Logger.h</includes>
    <includes local="yes">glm/mat2x2.hpp</includes>
    <includes local="yes">glm/vec2.hpp</includes>
    <incdepgraph>
      <node id="11">
        <label>Core/export.h</label>
        <link refid="_export_8h"/>
      </node>
      <node id="5">
        <label>Core/Internal/AuthorizationBadge.h</label>
        <link refid="_authorization_badge_8h"/>
      </node>
      <node id="9">
        <label>Core/Internal/RTTI.h</label>
        <link refid="_r_t_t_i_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Core/SceneManagement/Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Core/SceneManagement/SceneManager.h</label>
        <link refid="_scene_manager_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ECS/Component/Components/BoxCollider.h</label>
        <link refid="_box_collider_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ECS/Component/Components/Transform.h</label>
        <link refid="_transform_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ECS/Component/IComponent.h</label>
        <link refid="_i_component_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ECS/Entity/GameObject.h</label>
        <link refid="_game_object_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>GameObject.hxx</label>
        <link refid="_game_object_8hxx"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ECS/System/Tree.h</label>
        <link refid="_tree_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Utils/Logger.h</label>
        <link refid="_logger_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/ECS/Component/Components/BoxCollider.cpp</label>
        <link refid="_box_collider_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>glm/mat2x2.hpp</label>
      </node>
      <node id="13">
        <label>glm/vec2.hpp</label>
      </node>
      <node id="12">
        <label>stduuid/uuid.h</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="16">
        <label>unordered_set</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacefrost">frost</innernamespace>
    <innernamespace refid="namespacefrost_1_1_e_c_s">frost::ECS</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_box_collider_8h" kindref="compound">ECS/Component/Components/BoxCollider.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_game_object_8h" kindref="compound">ECS/Entity/GameObject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_logger_8h" kindref="compound">Utils/Logger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;glm/mat2x2.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;glm/vec2.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefrost_1_1_e_c_s" kindref="compound">frost::ECS</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11" refid="classfrost_1_1_e_c_s_1_1_box_collider_1a856077ff45711d964b58267a356e80d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a856077ff45711d964b58267a356e80d0" kindref="member">BoxCollider::BoxCollider</ref>(<ref refid="classfrost_1_1_e_c_s_1_1_game_object" kindref="compound">GameObject</ref>&amp;<sp/>_GameObject)<sp/>:<sp/><ref refid="classfrost_1_1_e_c_s_1_1_i_component" kindref="compound">IComponent</ref>(_GameObject)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ab096f6c7a983a2384d650efb74bdbc4f" kindref="member">Start</ref>();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classfrost_1_1_e_c_s_1_1_box_collider_1a5fdef2ea09f30e9dd576ca73e7a503af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a5fdef2ea09f30e9dd576ca73e7a503af" kindref="member">BoxCollider::~BoxCollider</ref>()</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classfrost_1_1_e_c_s_1_1_box_collider_1ab096f6c7a983a2384d650efb74bdbc4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ab096f6c7a983a2384d650efb74bdbc4f" kindref="member">BoxCollider::Start</ref>()</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ad296a1e0fea570e8b864d56837413430" kindref="member">m_currentScene</ref><sp/>=<sp/>&amp;<ref refid="classfrost_1_1core_1_1_scene_manager_1ae5963de250ff2e10c2063358c54687e7" kindref="member">frost::core::SceneManager::GetInstance</ref>().<ref refid="classfrost_1_1core_1_1_scene_manager_1a627cf41a8f9aab63d4c035cc01e28875" kindref="member">GetActiveScene</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref><sp/>=<sp/><ref refid="classfrost_1_1_e_c_s_1_1_i_component_1a1df5779e3ba49dfcdee54914de867474" kindref="member">GetParentObject</ref>().<ref refid="classfrost_1_1_e_c_s_1_1_game_object_1a4525a8c8688a6b8c4bdeb0bdae94a7fb" kindref="member">GetComponent</ref>&lt;<ref refid="classfrost_1_1_e_c_s_1_1_transform" kindref="compound">frost::ECS::Transform</ref>&gt;();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;glm::vec2&gt;();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>transform<sp/>is<sp/>the<sp/>center<sp/>of<sp/>the<sp/>box,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>calculate<sp/>the<sp/>vertices<sp/>based<sp/>on<sp/>the<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref>-&gt;push_back(((<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a501448f04c653b40eb6b439fb89f427a" kindref="member">position</ref>)<sp/>+<sp/>glm::vec2(-1.0,<sp/>1.0))<sp/>*<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a3d8441a6f4f38db9a2ac8b6d8c59cbbf" kindref="member">scale</ref>);<sp/></highlight><highlight class="comment">//<sp/>top<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref>-&gt;push_back(((<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a501448f04c653b40eb6b439fb89f427a" kindref="member">position</ref>)<sp/>+<sp/>glm::vec2(-1.0,<sp/>-1.0))<sp/>*<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a3d8441a6f4f38db9a2ac8b6d8c59cbbf" kindref="member">scale</ref>);<sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref>-&gt;push_back(((<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a501448f04c653b40eb6b439fb89f427a" kindref="member">position</ref>)<sp/>+<sp/>glm::vec2(1.0,<sp/>-1.0))<sp/>*<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a3d8441a6f4f38db9a2ac8b6d8c59cbbf" kindref="member">scale</ref>);<sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref>-&gt;push_back(((<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a501448f04c653b40eb6b439fb89f427a" kindref="member">position</ref>)<sp/>+<sp/>glm::vec2(1.0,<sp/>1.0))<sp/>*<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a3d8441a6f4f38db9a2ac8b6d8c59cbbf" kindref="member">scale</ref>);<sp/></highlight><highlight class="comment">//<sp/>top<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classfrost_1_1_e_c_s_1_1_box_collider_1acd8bd4864af9b97b965f855dcc905a74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acd8bd4864af9b97b965f855dcc905a74" kindref="member">BoxCollider::Update</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*_DeltaTime*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfrost_1_1_e_c_s_1_1_i_component_1ab5995c7763e343eae8148429a73f64f8" kindref="member">m_isActive</ref><sp/>&amp;&amp;<sp/>!<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a72094fa83f1f232528cc731ce50f39cd" kindref="member">m_isStatic</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::mat2<sp/>RotationMatrix<sp/>=<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a958f0c85a08f4f857b89171dd84fbd53" kindref="member">GetRotationMatrix</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref>-&gt;at(0)<sp/>=<sp/>((<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a501448f04c653b40eb6b439fb89f427a" kindref="member">position</ref>)<sp/>+<sp/>glm::vec2(-1.0,<sp/>1.0))<sp/>*<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a3d8441a6f4f38db9a2ac8b6d8c59cbbf" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref>-&gt;at(1)<sp/>=<sp/>((<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a501448f04c653b40eb6b439fb89f427a" kindref="member">position</ref>)<sp/>+<sp/>glm::vec2(-1.0,<sp/>-1.0))<sp/>*<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a3d8441a6f4f38db9a2ac8b6d8c59cbbf" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref>-&gt;at(2)<sp/>=<sp/>((<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a501448f04c653b40eb6b439fb89f427a" kindref="member">position</ref>)<sp/>+<sp/>glm::vec2(1.0,<sp/>-1.0))<sp/>*<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a3d8441a6f4f38db9a2ac8b6d8c59cbbf" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref>-&gt;at(3)<sp/>=<sp/>((<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a501448f04c653b40eb6b439fb89f427a" kindref="member">position</ref>)<sp/>+<sp/>glm::vec2(1.0,<sp/>1.0))<sp/>*<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1a3d8441a6f4f38db9a2ac8b6d8c59cbbf" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classfrost_1_1_e_c_s_1_1_box_collider_1a4bad23db7e3fe21d2dc65d424abda4ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a4bad23db7e3fe21d2dc65d424abda4ac" kindref="member">BoxCollider::Destroy</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classfrost_1_1_e_c_s_1_1_box_collider_1a9618a909dd24002094ad9497eef8f732" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfrost_1_1_e_c_s_1_1_collision_data" kindref="compound">CollisionData</ref><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a9618a909dd24002094ad9497eef8f732" kindref="member">BoxCollider::IsColliding</ref>(<ref refid="classfrost_1_1_e_c_s_1_1_box_collider" kindref="compound">BoxCollider</ref>&amp;<sp/>_Other)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfrost_1_1_e_c_s_1_1_collision_data" kindref="compound">CollisionData</ref><sp/>Data<sp/>=<sp/><ref refid="structfrost_1_1_e_c_s_1_1_collision_data" kindref="compound">CollisionData</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_Other.<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a6fb9364578615f9a651bee5f022106fa" kindref="member">GetIsStatic</ref>()<sp/>||<sp/>!_Other.<ref refid="classfrost_1_1_e_c_s_1_1_i_component_1a4a7fc37eada09e556897c7bab9a42d36" kindref="member">IsActive</ref>())</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Data;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a6951359b707a4af71b81921714e84c43" kindref="member">AABB</ref>(_Other);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classfrost_1_1_e_c_s_1_1_box_collider_1a6951359b707a4af71b81921714e84c43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfrost_1_1_e_c_s_1_1_collision_data" kindref="compound">CollisionData</ref><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a6951359b707a4af71b81921714e84c43" kindref="member">BoxCollider::AABB</ref>(<ref refid="classfrost_1_1_e_c_s_1_1_box_collider" kindref="compound">BoxCollider</ref>&amp;<sp/>_Other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="63"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;glm::vec2&gt;*<sp/>otherVertices<sp/>=<sp/>_Other.<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1aeaced076499860417dda5600c89ab5d6" kindref="member">GetVertices</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfrost_1_1_e_c_s_1_1_collision_data" kindref="compound">CollisionData</ref><sp/>Data<sp/>=<sp/><ref refid="structfrost_1_1_e_c_s_1_1_collision_data" kindref="compound">CollisionData</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>MinX<sp/>=<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref>-&gt;at(0).x;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>MaxX<sp/>=<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref>-&gt;at(2).x;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>MaxY<sp/>=<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref>-&gt;at(0).y;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>MinY<sp/>=<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref>-&gt;at(2).y;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>otherMinX<sp/>=<sp/>otherVertices-&gt;at(0).x;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>otherMaxX<sp/>=<sp/>otherVertices-&gt;at(2).x;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>otherMaxY<sp/>=<sp/>otherVertices-&gt;at(0).y;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>otherMinY<sp/>=<sp/>otherVertices-&gt;at(2).y;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AisToTheRightOfB<sp/>=<sp/>MinX<sp/>&gt;<sp/>otherMaxX;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AisToTheLeftOfB<sp/>=<sp/>MaxX<sp/>&lt;<sp/>otherMinX;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AisAboveB<sp/>=<sp/>MinY<sp/>&gt;<sp/>otherMaxY;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AisBelowB<sp/>=<sp/>MaxY<sp/>&lt;<sp/>otherMinY;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isCollide<sp/>=<sp/>!(AisToTheRightOfB<sp/>||<sp/>AisToTheLeftOfB<sp/>||<sp/>AisAboveB<sp/>||<sp/>AisBelowB);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isCollide)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Data;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data.<ref refid="structfrost_1_1_e_c_s_1_1_collision_data_1a8b6dd02c3619a57f734e40eda5ba2b9b" kindref="member">isColliding</ref><sp/>=<sp/>isCollide;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data.<ref refid="structfrost_1_1_e_c_s_1_1_collision_data_1a7ea72d967a23a4849bf10128ea927396" kindref="member">otherCollider</ref><sp/>=<sp/>&amp;_Other;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data.<ref refid="structfrost_1_1_e_c_s_1_1_collision_data_1a557fc938d26fbfad98c5132fde9c33ea" kindref="member">top</ref><sp/>=<sp/>MaxY<sp/>-<sp/>otherMinY;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data.<ref refid="structfrost_1_1_e_c_s_1_1_collision_data_1aa024811b77025eb1a23581c12c5ef060" kindref="member">bottom</ref><sp/>=<sp/>MinY<sp/>-<sp/>otherMaxY;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data.<ref refid="structfrost_1_1_e_c_s_1_1_collision_data_1abd0b8d9ee14795e566ff565bce43db02" kindref="member">left</ref><sp/>=<sp/>MinX<sp/>-<sp/>otherMaxX;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data.<ref refid="structfrost_1_1_e_c_s_1_1_collision_data_1a6afc67995eeb24d4a3a73923911f8657" kindref="member">right</ref><sp/>=<sp/>MaxX<sp/>-<sp/>otherMinX;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Data;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classfrost_1_1_e_c_s_1_1_box_collider_1a6fb9364578615f9a651bee5f022106fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a6fb9364578615f9a651bee5f022106fa" kindref="member">BoxCollider::GetIsStatic</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="98"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a72094fa83f1f232528cc731ce50f39cd" kindref="member">m_isStatic</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classfrost_1_1_e_c_s_1_1_box_collider_1af358c1fd0aef3dbfe226c130e5dbca96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1af358c1fd0aef3dbfe226c130e5dbca96" kindref="member">BoxCollider::SetIsStatic</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_IsStatic)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a72094fa83f1f232528cc731ce50f39cd" kindref="member">m_isStatic</ref><sp/>=<sp/>_IsStatic;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classfrost_1_1_e_c_s_1_1_box_collider_1a1582760a5bb835ab5af1eb03414862d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a1582760a5bb835ab5af1eb03414862d7" kindref="member">BoxCollider::GetData</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_ForceLoggerDraw)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="108"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfrost_1_1utils_1_1_logger" kindref="compound">frost::utils::Logger</ref>*<sp/>Logger<sp/>=<sp/><ref refid="classfrost_1_1utils_1_1_logger_1a2d6186fe376f325ca9fbc37c6672d6bf" kindref="member">frost::utils::Logger::GetInstance</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>IsActiveString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>IsActive<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classfrost_1_1_e_c_s_1_1_i_component_1ab5995c7763e343eae8148429a73f64f8" kindref="member">m_isActive</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;True&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;False&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>IsStaticString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>IsStatic<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a72094fa83f1f232528cc731ce50f39cd" kindref="member">m_isStatic</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;True&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;False&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger-&gt;<ref refid="classfrost_1_1utils_1_1_logger_1aa9492b991b4583aae82fef8368730aa5" kindref="member">LogInfo</ref>(IsActiveString);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger-&gt;<ref refid="classfrost_1_1utils_1_1_logger_1aa9492b991b4583aae82fef8368730aa5" kindref="member">LogInfo</ref>(IsStaticString);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_ForceLoggerDraw)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger-&gt;<ref refid="classfrost_1_1utils_1_1_logger_1a9ebe619cce25c88017f6d968eb9376af" kindref="member">Show</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classfrost_1_1_e_c_s_1_1_box_collider_1a958f0c85a08f4f857b89171dd84fbd53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat2<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1a958f0c85a08f4f857b89171dd84fbd53" kindref="member">BoxCollider::GetRotationMatrix</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="122"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::mat2<sp/>NewMatrix(glm::vec2(cos(<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1ad2b78d7e36deeff39aa1d798b3cbadf3" kindref="member">rotation</ref>),<sp/>-sin(<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1ad2b78d7e36deeff39aa1d798b3cbadf3" kindref="member">rotation</ref>)),<sp/>glm::vec2(sin(<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1ad2b78d7e36deeff39aa1d798b3cbadf3" kindref="member">rotation</ref>),<sp/>cos(<ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1acf17ea9dba62a14d4451c6f87deca84c" kindref="member">m_transform</ref>-&gt;<ref refid="classfrost_1_1_e_c_s_1_1_transform_1ad2b78d7e36deeff39aa1d798b3cbadf3" kindref="member">rotation</ref>)));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NewMatrix;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classfrost_1_1_e_c_s_1_1_box_collider_1aeaced076499860417dda5600c89ab5d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;glm::vec2&gt;*<sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1aeaced076499860417dda5600c89ab5d6" kindref="member">BoxCollider::GetVertices</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="128"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classfrost_1_1_e_c_s_1_1_box_collider_1ae852b5b9de84db8ac6e808657248369c" kindref="member">m_vertices</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/ECS/Component/Components/BoxCollider.cpp"/>
  </compounddef>
</doxygen>
