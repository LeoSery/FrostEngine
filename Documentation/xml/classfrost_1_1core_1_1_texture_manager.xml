<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classfrost_1_1core_1_1_texture_manager" kind="class" language="C++" prot="public">
    <compoundname>frost::core::TextureManager</compoundname>
    <includes refid="_texture_manager_8h" local="no">TextureManager.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfrost_1_1core_1_1_texture_manager_1ae639ecdddead4fc17f830fa6edbbe3a6" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="structfrost_1_1core_1_1_s___texture_data" kindref="compound">S_TextureData</ref> &gt;</type>
        <definition>std::map&lt;std::string, S_TextureData&gt; frost::core::TextureManager::m_textures</definition>
        <argsstring></argsstring>
        <name>m_textures</name>
        <qualifiedname>frost::core::TextureManager::m_textures</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Core/Serial/TextureManager.h" line="36" column="10" bodyfile="include/Core/Serial/TextureManager.h" bodystart="36" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfrost_1_1core_1_1_texture_manager_1a811edfe4d1891d62fd5de7e2d649acf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>frost::core::TextureManager::TextureManager</definition>
        <argsstring>()</argsstring>
        <name>TextureManager</name>
        <qualifiedname>frost::core::TextureManager::TextureManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Core/Serial/TextureManager.h" line="19" column="1" bodyfile="src/Render/TextureMgr.cpp" bodystart="7" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classfrost_1_1core_1_1_texture_manager_1a2cc224e561478c71fbaea3dee1f04354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>frost::core::TextureManager::~TextureManager</definition>
        <argsstring>()</argsstring>
        <name>~TextureManager</name>
        <qualifiedname>frost::core::TextureManager::~TextureManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Core/Serial/TextureManager.h" line="20" column="1" bodyfile="src/Render/TextureMgr.cpp" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classfrost_1_1core_1_1_texture_manager_1af5f7963947361014eea4f4074e5166cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool frost::core::TextureManager::LoadTexture</definition>
        <argsstring>(const std::filesystem::path &amp;path)</argsstring>
        <name>LoadTexture</name>
        <qualifiedname>frost::core::TextureManager::LoadTexture</qualifiedname>
        <param>
          <type>const std::filesystem::path &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Core/Serial/TextureManager.h" line="23" column="6" bodyfile="src/Render/TextureMgr.cpp" bodystart="16" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classfrost_1_1core_1_1_texture_manager_1a8cdea3d4e51dc59826f3d9725f002203" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structfrost_1_1core_1_1_s___texture_data" kindref="compound">S_TextureData</ref> &amp;</type>
        <definition>const S_TextureData &amp; frost::core::TextureManager::GetTextureData</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>GetTextureData</name>
        <qualifiedname>frost::core::TextureManager::GetTextureData</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Core/Serial/TextureManager.h" line="26" column="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classfrost_1_1core_1_1_texture_manager_1a3bce744a9537bf8bcd54074cc0634200" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool frost::core::TextureManager::LoadTextureMetadata</definition>
        <argsstring>(std::filesystem::path &amp;path, S_TextureData &amp;textureData)</argsstring>
        <name>LoadTextureMetadata</name>
        <qualifiedname>frost::core::TextureManager::LoadTextureMetadata</qualifiedname>
        <param>
          <type>std::filesystem::path &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="structfrost_1_1core_1_1_s___texture_data" kindref="compound">S_TextureData</ref> &amp;</type>
          <declname>textureData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Core/Serial/TextureManager.h" line="33" column="6" bodyfile="src/Render/TextureMgr.cpp" bodystart="67" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classfrost_1_1core_1_1_texture_manager_1a3a7c033f8fd7e7d7e21a307c19332455" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool frost::core::TextureManager::LoadAnimationMetadata</definition>
        <argsstring>(rapidxml::xml_node&lt;&gt; *node, S_TextureData &amp;textureData)</argsstring>
        <name>LoadAnimationMetadata</name>
        <qualifiedname>frost::core::TextureManager::LoadAnimationMetadata</qualifiedname>
        <param>
          <type>rapidxml::xml_node&lt;&gt; *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="structfrost_1_1core_1_1_s___texture_data" kindref="compound">S_TextureData</ref> &amp;</type>
          <declname>textureData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Core/Serial/TextureManager.h" line="34" column="6" bodyfile="src/Render/TextureMgr.cpp" bodystart="104" bodyend="198"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/Core/Serial/TextureManager.h" line="14" column="1" bodyfile="include/Core/Serial/TextureManager.h" bodystart="15" bodyend="37"/>
    <listofallmembers>
      <member refid="classfrost_1_1core_1_1_texture_manager_1a8cdea3d4e51dc59826f3d9725f002203" prot="public" virt="non-virtual"><scope>frost::core::TextureManager</scope><name>GetTextureData</name></member>
      <member refid="classfrost_1_1core_1_1_texture_manager_1a3a7c033f8fd7e7d7e21a307c19332455" prot="private" virt="non-virtual"><scope>frost::core::TextureManager</scope><name>LoadAnimationMetadata</name></member>
      <member refid="classfrost_1_1core_1_1_texture_manager_1af5f7963947361014eea4f4074e5166cc" prot="public" virt="non-virtual"><scope>frost::core::TextureManager</scope><name>LoadTexture</name></member>
      <member refid="classfrost_1_1core_1_1_texture_manager_1a3bce744a9537bf8bcd54074cc0634200" prot="private" virt="non-virtual"><scope>frost::core::TextureManager</scope><name>LoadTextureMetadata</name></member>
      <member refid="classfrost_1_1core_1_1_texture_manager_1ae639ecdddead4fc17f830fa6edbbe3a6" prot="private" virt="non-virtual"><scope>frost::core::TextureManager</scope><name>m_textures</name></member>
      <member refid="classfrost_1_1core_1_1_texture_manager_1a811edfe4d1891d62fd5de7e2d649acf4" prot="public" virt="non-virtual"><scope>frost::core::TextureManager</scope><name>TextureManager</name></member>
      <member refid="classfrost_1_1core_1_1_texture_manager_1a2cc224e561478c71fbaea3dee1f04354" prot="public" virt="non-virtual"><scope>frost::core::TextureManager</scope><name>~TextureManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
